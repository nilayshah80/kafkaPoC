docker run -t -i --name cli --network ksql-course_default confluentinc/cp-ksql-cli:latest http://ksql-server:8088

docker exec -it ksql-cli bash ---> WORKING
ksql http://ksql-server:8088

ksql
=====
list topics;
print 'USERS';
print 'USERS' from beginning;
print 'USERS' from beginning limit 2; //not working for me
print 'USERS' from beginning interval 2 limit 2;

create stream users_stream (name varchar, countrycode varchar) WITH (KAFKA_TOPIC='USERS', VALUE_FORMAT='DELIMITED');
list streams;
select name, countrycode from users_stream;

SET 'auto.offset.reset'='earliest';
select countrycode, count(*) from users_stream group by countrycode;
drop stream if exists users_stream delete topic;

CREATE STREAM userprofile (userid INT, firstname VARCHAR, lastname VARCHAR, countrycode VARCHAR, rating DOUBLE) WITH (VALUE_FORMAT = 'JSON', KAFKA_TOPIC ='USERPROFILE');
describe userprofile;

select TIMESTAMPTOSTRING(rowtime, 'dd/MMM HH:mm') as createtime, firstname from userprofile;
select TIMESTAMPTOSTRING(rowtime, 'dd/MMM HH:mm') as createtime, firstname || ' ' || ucase(lastname) as full_name from userprofile;

run script './app/user_profile_pretty.ksql';
describe extended user_profile_pretty;
select description from user_profile_pretty;
drop stream user_profile_pretty;
terminate query CSAS_USER_PROFILE_PRETTY_0;

CREATE TABLE COUNTRYTABLE (countrycode VARCHAR, countryname VARCHAR) WITH (KAFKA_TOPIC='COUNTRY-CSV', VALUE_FORMAT='DELIMITED', KEY='countrycode');
describe  COUNTRYTABLE;
describe EXTENDED  COUNTRYTABLE;
select countrycode,countryname from countrytable;
select countrycode,countryname from countrytable where countrycode='GB' limit 1;
select countrycode,countryname from countrytable where countrycode='FR' limit 1;

ksql-datagen
============
docker run --rm -it -v $PWD:/app --name ksql-datagen --network ksql-course_default \
      confluentinc/ksql-examples:5.2.2

/usr/bin/ksql-datagen schema=./app/datagen/userprofile.avro format=json topic=USERPROFILE bootstrap-server=http://kafka:29092 key=userid maxInterval=5000 iterations=100

kafka
=====
docker exec -it ksql-course_kafka_1 bash
kafka-topics --bootstrap-server :9092 --create --partitions 1 --replication-factor 1 --topic USERS
kafka-console-producer --topic USERS --broker-list :9092
    >Alice,US
    >Bob,GB
    >Carol,AU
    >Dan,US

kafka-topics --bootstrap-server :9092 --create --partitions 1 --replication-factor 1 --topic USERPROFILE
kafka-console-producer --topic USERPROFILE --broker-list :9092
    {"userid":1000, "firstname":"Alison", "lastname":"Smith", "countrycode":"GB", "rating":4.7}
    {"userid":1001, "firstname":"Bob", "lastname":"Smith", "countrycode":"US", "rating":4.2}

kafka-topics --bootstrap-server :9092 --create --partitions 1 --replication-factor 1 --topic COUNTRY-CSV
kafka-console-producer --topic COUNTRY-CSV --broker-list :9092 --property "parse.key=true" --property "key.separator=:"
    >AU:AU,Australia
    >IN:IN,India
    >GB:GB,UK
    >US:US,United States
    >GB:GB, United Kingdom
    >FR:FR,France


---Follow Readme.md from this point onwards line - 270 , 286
